{"version":3,"sources":["cardList.js","App.js","serviceWorker.js","index.js"],"names":["kingdomList","basic","id","name","nocturne","boon","will_o_wisp","heirloom","ghost","hex","imp","druid","wish","zombie","bat","nameMap","extraMap","boonList","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeKingdom","e","kingdom","assign","state","n","parseInt","target","value","setState","onGenerate","_","errors","validateForGenerate","length","supplies","push","selectSupply","_this$parseQuery","parseQuery","window","location","search","substring","qry","params","split","forEach","kv","_kv$split","_kv$split2","slicedToArray","k","v","_loop","i","supply","ex","cards","_loop2","j","concat","card","find","c","_ret2","druidBoons","_loop3","b","_ret3","_ret","values","reduce","acc","x","restCards","entries","_ref","_ref2","_this2","_ref3","_ref4","expansion","shuffleArray","slice","some","ary","copied","Math","floor","random","_ref5","_this3","rest","_ref6","_ref8","_ref7","usedCards","apply","toConsumableArray","map","filter","usedCard","encodeURIComponent","join","messages","error","react_default","a","createElement","key","className","keys","heirlooms","undefined","extraCards","type","min","max","step","onChange","onClick","reverse","_prevProps","_prevState","genQuery","history","replaceState","Component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1a528794.chunk.js","sourcesContent":["export const kingdomList = {\n  basic: [\n    { id: 1, name: \"役人\" },\n    { id: 2, name: \"地下貯蔵庫\" },\n    { id: 3, name: \"礼拝堂\" },\n    { id: 4, name: \"議事堂\" },\n    { id: 5, name: \"祝祭\" },\n    { id: 6, name: \"庭園\" },\n    { id: 7, name: \"研究所\" },\n    { id: 8, name: \"書庫\" },\n    { id: 9, name: \"市場\" },\n    { id: 10, name: \"民兵\" },\n    { id: 11, name: \"鉱山\" },\n    { id: 12, name: \"堀\" },\n    { id: 13, name: \"金貸し\" },\n    { id: 14, name: \"改築\" },\n    { id: 15, name: \"鍛冶屋\" },\n    { id: 16, name: \"玉座の間\" },\n    { id: 17, name: \"村\" },\n    { id: 18, name: \"魔女\" },\n    { id: 19, name: \"工房\" },\n    { id: 20, name: \"職人\" },\n    { id: 21, name: \"山賊\" },\n    { id: 22, name: \"前駆者\" },\n    { id: 23, name: \"商人\" },\n    { id: 24, name: \"密猟者\" },\n    { id: 25, name: \"衛兵\" },\n    { id: 26, name: \"家臣\" }\n  ],\n  nocturne: [\n    { id: 1, name: \"詩人\", boon: true, will_o_wisp: true },\n    { id: 2, name: \"恵みの村\", boon: true },\n    { id: 3, name: \"墓地\", heirloom: '呪われた鏡', ghost: true },\n    { id: 4, name: \"取り替え子\" },\n    { id: 5, name: \"カブラー\" },\n    { id: 6, name: \"コンクラーベ\" },\n    { id: 7, name: \"納骨堂\" },\n    { id: 8, name: \"呪われた村\", hex: true },\n    { id: 9, name: \"悪人のアジト\" },\n    { id: 10, name: \"悪魔の工房\", imp: true },\n    { id: 11, name: \"ドルイド\", druid: true },\n    { id: 12, name: \"悪魔祓い\", will_o_wisp: true, imp: true, ghost: true },\n    { id: 13, name: \"忠犬\" },\n    { id: 14, name: \"愚者\", boon: true, will_o_wisp: true, heirloom: '幸運のコイン' },\n    { id: 15, name: \"ゴーストタウン\" },\n    { id: 16, name: \"守護者\" },\n    { id: 17, name: \"偶像\", boon: true, will_o_wisp: true },\n    { id: 18, name: \"レプラコーン\", hex: true, wish: true },\n    { id: 19, name: \"修道院\" },\n    { id: 20, name: \"ネクロマンサー\", zombie: true },\n    { id: 21, name: \"夜警\" },\n    { id: 22, name: \"ピクシー\", boon: true, will_o_wisp: true, heirloom: 'ヤギ' },\n    { id: 23, name: \"プーカ\" , heirloom: '呪われた金貨' },\n    { id: 24, name: \"夜襲\" },\n    { id: 25, name: \"聖なる木立ち\", boon: true, will_o_wisp: true },\n    { id: 26, name: \"秘密の洞窟\", heirloom: '魔法のランプ', wish: true },\n    { id: 27, name: \"羊飼い\", heirloom: '牧草地' },\n    { id: 28, name: \"暗躍者\", hex: true },\n    { id: 29, name: \"迫害者\", hex: true, imp: true },\n    { id: 30, name: \"追跡者\", boon: true, will_o_wisp: true, heirloom: '革袋' },\n    { id: 31, name: \"悲劇のヒーロー\" },\n    { id: 32, name: \"吸血鬼\", hex: true, bat: true },\n    { id: 33, name: \"人狼\", hex: true }\n  ]\n};\n\nexport const nameMap = { basic: \"基本\", nocturne: \"夜想曲\" };\n\nexport const extraMap = {\n  boon: \"恵み\", hex: \"呪詛\", will_o_wisp: \"ウィル・オ・ウィスプ\", imp: \"小悪魔\",\n  ghost: \"幽霊\", wish: \"願い\", bat: \"蝙蝠\"\n};\n\nexport const boonList = [\n  { id: 1, name: '大地の恵み' },\n  { id: 2, name: '田畑の恵み' },\n  { id: 3, name: '炎の恵み' },\n  { id: 4, name: '森の恵み' },\n  { id: 5, name: '月の恵み' },\n  { id: 6, name: '山の恵み' },\n  { id: 7, name: '川の恵み' },\n  { id: 8, name: '海の恵み' },\n  { id: 9, name: '空の恵み' },\n  { id: 10, name: '太陽の恵み' },\n  { id: 11, name: '沼の恵み', will_o_wisp: true },\n  { id: 12, name: '風の恵み' }\n];\n","import React, { Component } from 'react';\nimport './App.css';\nimport { kingdomList, nameMap, extraMap, boonList } from './cardList.js'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    let { supplies, errors } = this.parseQuery(window.location.search.substring(1));\n    this.state = {\n      kingdom: { basic: 5, nocturne: 5 }, supplies: supplies, errors: errors\n    };\n  }\n\n  parseQuery(qry) {\n    let supplies = [];\n\n    let params = {};\n    qry.split('&').forEach(kv => {\n      let [k, v] = kv.split('=');\n      params[k] = v;\n    });\n\n    if (!params['sn']) {\n      return { supplies: [], errors: [] };\n    }\n\n    for (let i = 0; i < parseInt(params['sn']); i++) {\n      let supply = {};\n      let kingdom = {};\n      ['basic', 'nocturne'].forEach(ex => {\n        let cards = [];\n        for (let j = 0; j < parseInt(params[`s${i}${ex[0]}n`]); j++) {\n          let id = parseInt(params[`s${i}${ex[0]}${j}`]);\n          let card = kingdomList[ex].find(c => c.id === id);\n\n          if (!card) {\n            return { supplies: [], errors: [`invalid parameter: s${i}${ex[0]}${j}}=${id}`] }\n          }\n          cards.push(card);\n        }\n        kingdom[ex] = cards;\n      });\n      supply.kingdom = kingdom;\n\n      if (params[`s${i}d0`]) {\n        supply.druidBoons = [];\n        for (let j = 0; j < 3; j++) {\n          let id = parseInt(params[`s${i}d${j}`])\n          let boon = boonList.find(b => b.id === id);\n          if (!boon) {\n            return { supplies: [], errors: [`invalid parameter: s${i}d${j}=${id}`] }\n          }\n          supply.druidBoons.push(boon);\n        }\n      }\n\n      supplies.push(supply);\n    }\n\n    return { supplies: supplies, errors: [] };\n  }\n\n  onChangeKingdom = (name) => {\n    return e => {\n      let kingdom = Object.assign({}, this.state.kingdom);\n      let n = parseInt(e.target.value, 10);\n      kingdom[name] = parseInt(e.target.value, 10);\n      let other = name === 'basic' ? 'nocturne' : 'base';\n      kingdom[other] = 10 - n;\n      this.setState({ kingdom: kingdom });\n    };\n  }\n\n  onGenerate = _ => {\n    // validate state\n    let errors = this.validateForGenerate();\n    if (errors.length !== 0) {\n      this.setState({ errors: errors });\n      return;\n    }\n\n    this.state.supplies.push(this.selectSupply())\n\n    this.setState({ supplies: this.state.supplies, errors : []});\n  }\n\n  validateForGenerate() {\n    let errors = [];\n    let kingdom = this.state.kingdom;\n\n    if (Object.values(kingdom).reduce((acc, x) => acc + x) !== 10) {\n      errors.push(\"王国カードの数が10ではありません\");\n    }\n\n    let restCards = this.restCards()\n    Object.entries(kingdom).forEach(([name, num]) => {\n      if (num > restCards[name].length) {\n        errors.push(`${nameMap[name]}のカード枚数が足りません`)\n      }\n    })\n\n    return errors;\n  }\n\n  selectSupply() {\n    let supply = {};\n    let kingdom = {};\n\n    let restCards = this.restCards();\n    Object.entries(restCards).forEach(([expansion, cards]) => {\n      kingdom[expansion] = this.shuffleArray(cards).slice(0, this.state.kingdom[expansion]);\n    });\n    supply.kingdom = kingdom\n    if (kingdom['nocturne'].some((card) => card.druid)) {\n      supply.druidBoons = this.shuffleArray(boonList).slice(0, 3);\n    }\n\n    return supply;\n  }\n\n  shuffleArray(ary) {\n    let copied = ary.slice();\n    for (let i = copied.length - 1; i>= 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [copied[i], copied[j]] = [copied[j], copied[i]];\n    }\n    return copied;\n  }\n\n  restCards() {\n    let rest = {};\n    Object.entries(kingdomList).forEach(([expansion, cards]) => {\n      let usedCards = [].concat(...this.state.supplies.map((supply) => supply.kingdom[expansion]));\n      rest[expansion] = cards.filter((card) => {\n        return !usedCards.some((usedCard) => usedCard.name === card.name)\n      });\n    });\n    return rest\n  }\n\n  genQuery() {\n    let ary = [`sn=${encodeURIComponent(this.state.supplies.length)}`];\n    this.state.supplies.forEach((supply, i) => {\n      ['basic', 'nocturne'].forEach(ex => {\n        ary.push(`s${i}${ex[0]}n=${encodeURIComponent(supply.kingdom[ex].length)}`)\n        supply.kingdom[ex].forEach((card, j) => {\n          ary.push(`s${i}${ex[0]}${j}=${encodeURIComponent(card.id)}`)\n        });\n      });\n      if (supply.druidBoons) {\n        supply.druidBoons.forEach((boon, j) => {\n          ary.push(`s${i}d${j}=${encodeURIComponent(boon.id)}`);\n        });\n      }\n    });\n    return `?${ary.join('&')}`;\n  }\n\n  render() {\n    let errors = '';\n    if (this.state.errors.length !== 0) {\n      let messages = this.state.errors.map((error, i) => <div key={i}>{error}</div>)\n      errors = <div className=\"alert alert-danger\">\n        {messages}\n      </div>;\n    }\n    let supplies = this.state.supplies.map((supply, i) => {\n      let kingdom = Object.keys(supply.kingdom).map(ex => `${supply.kingdom[ex].map(card => card.name).join(' ')}`).map((cards, i) => <div key={i}>{cards}</div>);\n      let heirlooms = [];\n      supply.kingdom['nocturne'].forEach((card) => {\n        if (card.heirloom) {\n          heirlooms.push(card.heirloom);\n        }\n      });\n      heirlooms = heirlooms.length > 0 ? <div>{`家宝: ${heirlooms.join(' ')}`}</div> : undefined;\n      let druidBoons = supply.druidBoons ? <div>{`ドルイドの恵み: ${supply.druidBoons.map(card => card.name).join(' ')}`}</div> : undefined;\n      let extraCards = [];\n      ['boon', 'hex', 'imp', 'ghost', 'wish', 'bat',].forEach(name => {\n        if (supply.kingdom['nocturne'].some(card => card[name])) {\n          extraCards.push(extraMap[name]);\n        }\n      });\n      if (supply.kingdom['nocturne'].some(card => (card['will_o_wisp']) || (supply.druidBoons && supply.druidBoons.some(boon => boon['will_o_wisp'])))) {\n        extraCards.push(extraMap['will_o_wisp']);\n      }\n      extraCards = extraCards.length > 0 ? <div>{`サプライ外: ${extraCards.join(' ')}`}</div> : undefined;\n      return (\n        <div className=\"panel panel-default\" key={i}>\n          <div className=\"panel-body\">\n            <div>{kingdom}</div>\n            {druidBoons}\n            {heirlooms}\n            {extraCards}\n          </div>\n        </div>\n      )\n    })\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n            <h1>Conclave</h1>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n            <h2>王国カード</h2>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-2\">\n            <div>基本:</div>\n          </div>\n          <div className=\"col-lg-2\">\n            <input type=\"number\" value={this.state.kingdom.basic} min=\"0\" max=\"10\" step=\"1\" onChange={this.onChangeKingdom(\"basic\")} />\n          </div>\n          <div className=\"col-lg-2\">\n            <div>夜想曲:</div>\n          </div>\n          <div className=\"col-lg-2\">\n            <input type=\"number\" value={this.state.kingdom.nocturne} min=\"0\" max=\"10\" step=\"1\" onChange={this.onChangeKingdom(\"nocturne\")} />\n          </div>\n          <div className=\"col-lg-2\">\n            <button type=\"button\" className=\"btn btn-info btn\" onClick={this.onGenerate}>生成</button>\n          </div>\n        </div>\n        <div className=\"row\" id=\"errors\">\n          <div className=\"col-lg-12\">\n            {errors}\n          </div>\n        </div>\n        <div className=\"row\" id=\"supplies\">\n          <div className=\"col-lg-12\">\n            {supplies.reverse()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  componentDidUpdate(_prevProps, _prevState) {\n    let qry = this.genQuery();\n    window.history.replaceState('', '', qry);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}